<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Stadium Seating</title>
    <style>
      body {
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        font-family: Arial, sans-serif;
        flex-direction: column;
        overflow: hidden;
      }
      .container {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        width: 100vw;
      }
      .legend {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        margin-left: 20px;
      }
      .legend p {
        display: flex;
        align-items: center;
        margin: 5px 0;
      }
      .legend span {
        width: 20px;
        height: 20px;
        display: inline-block;
        margin-right: 10px;
        border: 1px solid black;
      }
      .circle-container {
        position: relative;
        width: 80vmin;
        height: 80vmin;
      }
      .circle {
        position: absolute;
        border: 5px solid black;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
      }
      .circle-1 {
        width: 100%;
        height: 100%;
        background: #ffcccc;
      }
      .circle-2 {
        width: 80%;
        height: 80%;
        background: #ccffcc;
        top: 10%;
        left: 10%;
      }
      .circle-3 {
        width: 60%;
        height: 60%;
        background: #ccccff;
        top: 20%;
        left: 20%;
      }
      .circle-4 {
        width: 40%;
        height: 40%;
        background: #ffff99;
        top: 30%;
        left: 30%;
      }
      .pitch {
        position: absolute;
        width: 15%;
        height: 30%;
        background: green;
        border-radius: 20px;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }
      .seat-view {
        display: none;
        flex-direction: column;
        align-items: center;
        justify-content: center;
      }
      .seats-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));
        gap: 5px;
        width: 90vw;
        max-width: 500px;
        justify-content: center;
      }
      .seat {
        width: 30px;
        height: 30px;
        border: 1px solid black;
        text-align: center;
        line-height: 30px;
        cursor: pointer;
      }
      .selected {
        background: yellow;
      }
      .booked {
        background: red;
        cursor: not-allowed;
      }
      .total-cost {
        font-size: 18px;
        margin-top: 10px;
      }
      button {
        margin: 10px;
        padding: 10px 15px;
        font-size: 16px;
        cursor: pointer;
        background-color: blue;
        color: white;
        border: none;
        border-radius: 5px;
      }
    </style>
  </head>
  <body>
    <div class="container" id="main-container">
      <div id="main-view" class="circle-container">
        <div class="circle circle-1" data-circle="1"></div>
        <div class="circle circle-2" data-circle="2"></div>
        <div class="circle circle-3" data-circle="3"></div>
        <div class="circle circle-4" data-circle="4"></div>
        <div class="pitch"></div>
      </div>
      <div class="legend" id="legend">
        <p><span style="background: #ffcccc"></span> Circle 1 - ₹500</p>
        <p><span style="background: #ccffcc"></span> Circle 2 - ₹400</p>
        <p><span style="background: #ccccff"></span> Circle 3 - ₹300</p>
        <p><span style="background: #ffff99"></span> Circle 4 (No Seats)</p>
        <p><span style="background: green"></span> Pitch</p>
      </div>
    </div>
    <div id="seat-view" class="seat-view">
      <h2>Select Seats</h2>
      <div class="seats-container"></div>
      <p class="total-cost">Total Cost: ₹0</p>
      <button onclick="bookSeats()">Book Tickets</button>
      <button onclick="goBack()">Back</button>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const userId = localStorage.getItem("userId");
        if (!userId) {
          alert("User not found. Please log in.");
          window.location.href = "/login";
          return;
        }
        let totalAmount = localStorage.getItem("totalAmount") || 0;
        document.getElementById(
          "total-amount"
        ).innerText = `Total Amount: ₹${totalAmount}`;
      });
    </script>

    <p id="total-amount"></p>

    <script>
      let selectedSeats =
        JSON.parse(localStorage.getItem("selectedSeats")) || [];
      let seatPrices = { 1: 500, 2: 400, 3: 300 };
      let currentCircle = 0;

      document.querySelectorAll(".circle[data-circle]").forEach((circle) => {
        circle.addEventListener("click", function () {
          const circleNum = this.getAttribute("data-circle");
          if (circleNum === "4") return;
          currentCircle = circleNum;
          document.getElementById("legend").style.display = "none";
          showSeats(circleNum);
        });
      });

      // Frontend Code
      async function fetchBookedSeats() {
        const matchId = localStorage.getItem("matchId");

        if (!matchId) {
          console.error("matchId is not provided.");
          return;
        }

        try {
          const response = await fetch(
            `/booked-seats?matchId=${matchId}`
          );
          const bookedSeats = await response.json();

          if (!Array.isArray(bookedSeats)) {
            console.error("Invalid response format:", bookedSeats);
            return;
          }

          bookedSeats.forEach((seat) => {
            if (seat.circleType === getCircleType(currentCircle)) {
              const seatDiv = document.querySelector(
                `.seat:nth-child(${seat.seatNumber})`
              );
              if (seatDiv) seatDiv.classList.add("booked");
            }
          });
        } catch (error) {
          console.error("Error fetching booked seats:", error);
        }
      }

      async function showSeats(circleNum) {
        document.getElementById("main-container").style.display = "none";
        document.getElementById("seat-view").style.display = "flex";
        const seatsContainer = document.querySelector(".seats-container");
        seatsContainer.innerHTML = "";
        updateTotalCost();
        displaySelectedSeats();

        for (let i = 1; i <= 50; i++) {
          const seat = document.createElement("div");
          seat.classList.add("seat");
          seat.innerText = i;

          const alreadySelected = selectedSeats.find(
            (s) =>
              s.seatNumber === i &&
              s.circleType === getCircleType(currentCircle)
          );
          if (alreadySelected) seat.classList.add("selected");

          seat.addEventListener("click", function () {
            if (!this.classList.contains("booked")) {
              this.classList.toggle("selected");
              if (this.classList.contains("selected")) {
                selectedSeats.push({
                  seatNumber: i,
                  circleType: getCircleType(currentCircle),
                });
              } else {
                selectedSeats = selectedSeats.filter(
                  (s) =>
                    !(
                      s.seatNumber === i &&
                      s.circleType === getCircleType(currentCircle)
                    )
                );
              }
              updateTotalCost();
              displaySelectedSeats();
              localStorage.setItem(
                "selectedSeats",
                JSON.stringify(selectedSeats)
              );
            }
          });
          seatsContainer.appendChild(seat);
        }
        await fetchBookedSeats(); // Fetch and block already booked seats
      }

      function getCircleType(circleNum) {
        switch (circleNum) {
          case "1":
            return "Platinum";
          case "2":
            return "Gold";
          case "3":
            return "Silver";
          default:
            return "Unknown";
        }
      }

      function updateTotalCost() {
        let totalCost = selectedSeats.reduce(
          (sum, seat) => sum + seatPrices[getCircleNumber(seat.circleType)],
          0
        );
        document.querySelector(
          ".total-cost"
        ).innerText = `Total Cost: ₹${totalCost}`;
        localStorage.setItem("totalAmount", totalCost);
      }

      function getCircleNumber(circleType) {
        return { Platinum: "1", Gold: "2", Silver: "3" }[circleType];
      }

      function displaySelectedSeats() {
        const selectedSeatsDisplay = document.getElementById("selected-seats");
        selectedSeatsDisplay.innerHTML = `Selected Seats: ${
          selectedSeats
            .map((s) => `${s.seatNumber} (${s.circleType})`)
            .join(", ") || "None"
        }`;
      }

      async function bookSeats() {
        const totalAmount = localStorage.getItem("totalAmount");
        // localStorage.setItem("matchId", "640a0c7b6f67e93710d79cf2");
        const matchId = localStorage.getItem("matchId"); // Assuming you're storing matchId in localStorage
        const userId = localStorage.getItem("userId"); // Assuming userId is stored after login

        const response = await fetch("/book", {
          // Add 'http://localhost:3000' for proper request handling
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            userId,
            matchId,
            selectedSeats,
          }),
        });

        if (response.ok) {
          alert(
            `You booked ${selectedSeats.length} tickets. Total cost: ₹${totalAmount}`
          );

          location.href = "/payment";
        } else {
          alert("Error while booking. Please try again.");
        }
      }

      function goBack() {
        document.getElementById("seat-view").style.display = "none";
        document.getElementById("main-container").style.display = "flex";
        document.getElementById("legend").style.display = "flex";
      }
    </script>

    <div id="selected-seats" style="margin-top: 10px; font-weight: bold"></div>
  </body>
</html>
